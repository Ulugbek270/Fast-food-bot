from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from database import get_all_categories, get_products_by_category_id, get_quantity, get_cart_product_for_delete


def send_contact():
    return ReplyKeyboardMarkup([
        [KeyboardButton(text='–ü–æ–¥–µ–ª–∏—Ç—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact=True)]
    ], resize_keyboard=True)




def generate_main_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton(text='‚úî –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')],
        [KeyboardButton(text='üìã –ò—Å—Ç–æ—Ä–∏—è'), KeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∞'), KeyboardButton(text='‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')]
    ], resize_keyboard=True)



def category_products():
    markup = InlineKeyboardMarkup(row_width=2)
    markup.row(
        InlineKeyboardButton(text='–í—Å—ë –º–µ–Ω—é', url='https://telegra.ph/Dobro-pozhalovat-vo-Vkusno-i-Tochka-09-09')
    )

    categories = get_all_categories()  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –ë–¥
    buttons = []
    for category in categories:
        btn = InlineKeyboardButton(text=category[1], callback_data=f'category_{category[0]}')
        buttons.append(btn)

    markup.add(*buttons)
    return markup



def products_by_category(category_id):
    markup = InlineKeyboardMarkup(row_width=2)
    products = get_products_by_category_id(category_id)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ id
    print(products)
    buttons = []
    for product_id, product_name in products:
        btn = InlineKeyboardButton(text=product_name, callback_data=f'product_{product_id}')
        buttons.append(btn)

    markup.add(*buttons)
    markup.row(
        InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='main_menu')
    )

    return markup





def generate_count_product(product_id, category_id, cart_id, product_name='', c=0):
    markup = InlineKeyboardMarkup(row_width=3)
    try:
        quantity = get_quantity(cart_id, product_name)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    except:
        quantity = c

    btn_minus = InlineKeyboardButton(text='‚ûñ', callback_data=f'minus_{quantity}_{product_id}')
    btn_plus = InlineKeyboardButton(text='‚ûï', callback_data=f'plus_{quantity}_{product_id}')
    btn_quantity = InlineKeyboardButton(text=str(quantity), callback_data='count')
    markup.add(btn_minus, btn_quantity, btn_plus)

    markup.row(
        InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', callback_data=f'cart_{product_id}_{quantity}')
    )
    markup.row(
        InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data=f'back_{category_id}')
    )

    return markup


def generate_cart_menu(cart_id):
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton(text='‚ôª –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'order_{cart_id}')
    )

    cart_products = get_cart_product_for_delete(cart_id)  # –§—É–Ω–∫. –¥—è–ª –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏ id –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    for cart_product_id, product_name in cart_products:
        markup.row(
            InlineKeyboardButton(text=f'üß® {product_name}', callback_data=f'delete_{cart_product_id}')
        )

    return markup





